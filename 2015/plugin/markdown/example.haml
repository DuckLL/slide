!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %title reveal.js - Markdown Demo
    %link{:href => "../../css/reveal.css", :rel => "stylesheet"}/
    %link#theme{:href => "../../css/theme/white.css", :rel => "stylesheet"}/
    %link{:href => "../../lib/css/zenburn.css", :rel => "stylesheet"}/
  %body
    .reveal
      .slides
        / Use external markdown resource, separate slides by three newlines; vertical slides by two newlines
        %section{"data-markdown" => "example.md", "data-separator" => "^\\n\\n\\n", "data-separator-vertical" => "^\\n\\n"}
        / Slides are separated by three dashes (quick 'n dirty regular expression)
        %section{"data-markdown" => "", "data-separator" => "---"}
          %script{:type => "text/template"}
            :cdata
              \## Demo 1
              Slide 1
              \---
              \## Demo 1
              Slide 2
              \---
              \## Demo 1
              Slide 3
        / Slides are separated by newline + three dashes + newline, vertical slides identical but two dashes
        %section{"data-markdown" => "", "data-separator" => "^\\n---\\n$", "data-separator-vertical" => "^\\n--\\n$"}
          %script{:type => "text/template"}
            :cdata
              \## Demo 2
              Slide 1.1
              
              \--
              
              \## Demo 2
              Slide 1.2
              
              \---
              
              \## Demo 2
              Slide 2
        / No "extra" slides, since there are no separators defined (so they'll become horizontal rulers)
        %section{"data-markdown" => ""}
          %script{:type => "text/template"}
            :cdata
              A
              
              \---
              
              B
              
              \---
              
              C
        / Slide attributes
        %section{"data-markdown" => ""}
          %script{:type => "text/template"}
            :cdata
              <!-- .slide: data-background="#000000" -->
              \## Slide attributes
        / Element attributes
        %section{"data-markdown" => ""}
          %script{:type => "text/template"}
            :cdata
              \## Element attributes
              \- Item 1 <!-- .element: class="fragment" data-fragment-index="2" -->
              \- Item 2 <!-- .element: class="fragment" data-fragment-index="1" -->
        / Code
        %section{"data-markdown" => ""}
          %script{:type => "text/template"}
            :cdata
              ```php
              public function foo()
              {
              $foo = array(
              'bar' => 'bar'
              )
              }
              ```
    %script{:src => "../../lib/js/head.min.js"}
    %script{:src => "../../js/reveal.js"}
    :javascript
      Reveal.initialize({
      				controls: true,
      				progress: true,
      				history: true,
      				center: true,
      
      				// Optional libraries used to extend on reveal.js
      				dependencies: [
      					{ src: '../../lib/js/classList.js', condition: function() { return !document.body.classList; } },
      					{ src: 'marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                          { src: 'markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                          { src: '../highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      					{ src: '../notes/notes.js' }
      				]
      			});
